{"ast":null,"code":"import _classCallCheck from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Well,Row,Col}from'react-bootstrap';import'./index.css';import UltimatePagination from'./ultimate_pagination';import BankCourse from'./bank_course';import CourseAutosuggest from'./course_autosuggest';import CustomAlert from'./custom_alert';var BankCourseList=/*#__PURE__*/function(_React$Component){_inherits(BankCourseList,_React$Component);var _super=_createSuper(BankCourseList);function BankCourseList(){var _this;_classCallCheck(this,BankCourseList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getListOfCourses=function(){var courses=_this.props.courses.map(function(course,i){var page=_this.props.page;var limit=_this.props.limit;var courseIsInBoundsOfPage=i>=(page-1)*limit&&i<page*limit;if(courseIsInBoundsOfPage){return/*#__PURE__*/React.createElement(BankCourse,{name:course.name,removable:course.is_removable,id:course.id,key:i,callbackOnDeleteCourse:_this.props.callbackOnDeleteCourse});}});if(!courses.length){courses=\"There are no available courses\";}return courses;};_this.getListOfAvailableCourses=function(){var availableCourses=_this.props.availableCourses.map(function(course,i){var page=_this.props.pageAvailableCourses;var limit=_this.props.limit;var courseIsInBoundsOfPage=i>=(page-1)*limit&&i<page*limit;if(courseIsInBoundsOfPage){return/*#__PURE__*/React.createElement(BankCourse,{name:course.name,removable:false,id:course.id,key:i,callbackOnDeleteCourse:_this.props.callbackOnDeleteCourse});}});if(!availableCourses.length){availableCourses=\"There are no available courses\";}return availableCourses;};return _this;}_createClass(BankCourseList,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomAlert,{message:this.props.dataAlert.data.message,isVisible:this.props.dataAlert.isVisibleAlert,callbackParent:this.props.callbackOnChildChangedClose,styleAlert:this.props.dataAlert.styleAlert,titleAlert:this.props.dataAlert.titleAlert,callbackSetAlertInvisible:this.props.callbackSetAlertInvisible}),/*#__PURE__*/React.createElement(Well,{bsSize:\"small\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Select course to become in bank\"),/*#__PURE__*/React.createElement(CourseAutosuggest,{courses:this.props.availableCourses,alertTitle:\"Are you sure you want to add this course to the bank?\",alertText:\"* The course and tasks from this course will be public and every user could copy\",callbackOnClick:this.props.callbackAddCourse,messageButton:\"Add course to bank\",mdInput:4,mdButton:2})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"div\",null,\"The following courses are marked as task sources:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",null,\" (You are free to copy the tasks from these courses)\")),/*#__PURE__*/React.createElement(\"div\",{className:\"list-group\"},this.getListOfCourses()),/*#__PURE__*/React.createElement(UltimatePagination,{currentPage:this.props.page,totalPages:this.props.totalPages,onChange:this.props.callbackOnPageChange})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"div\",null,\"The following courses are not marked as bank and you are admin:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",null,\" (You can copy tasks from these courses to other courses which you are admin)\")),/*#__PURE__*/React.createElement(\"div\",{className:\"list-group\"},this.getListOfAvailableCourses()),/*#__PURE__*/React.createElement(UltimatePagination,{currentPage:this.props.pageAvailableCourses,totalPages:this.props.totalAvailableCoursePages,onChange:this.props.callbackOnPageAvailableCourseChange}))));}}]);return BankCourseList;}(React.Component);export default BankCourseList;","map":{"version":3,"sources":["/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/src/bank_course_list.jsx"],"names":["React","Well","Row","Col","UltimatePagination","BankCourse","CourseAutosuggest","CustomAlert","BankCourseList","getListOfCourses","courses","props","map","course","i","page","limit","courseIsInBoundsOfPage","name","is_removable","id","callbackOnDeleteCourse","length","getListOfAvailableCourses","availableCourses","pageAvailableCourses","dataAlert","data","message","isVisibleAlert","callbackOnChildChangedClose","styleAlert","titleAlert","callbackSetAlertInvisible","callbackAddCourse","totalPages","callbackOnPageChange","totalAvailableCoursePages","callbackOnPageAvailableCourseChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Well, Row, Col} from 'react-bootstrap';\nimport './index.css';\n\nimport UltimatePagination from './ultimate_pagination';\nimport BankCourse from './bank_course'\nimport CourseAutosuggest from './course_autosuggest'\nimport CustomAlert from './custom_alert';\n\nclass BankCourseList extends React.Component {\n\n    getListOfCourses = () => {\n        let courses = this.props.courses.map((course, i) => {\n            const page = this.props.page;\n            const limit = this.props.limit;\n            const courseIsInBoundsOfPage = i >= ((page - 1) * limit) && i < (page * limit);\n\n            if (courseIsInBoundsOfPage) {\n                return (\n                    <BankCourse\n                        name={course.name}\n                        removable={course.is_removable}\n                        id={course.id}\n                        key={i}\n                        callbackOnDeleteCourse={this.props.callbackOnDeleteCourse}\n                    />\n                )\n            }\n        });\n\n        if (!courses.length) {\n            courses = \"There are no available courses\";\n        }\n        return courses;\n    };\n\n    getListOfAvailableCourses = () => {\n        let availableCourses = this.props.availableCourses.map((course, i) => {\n            const page = this.props.pageAvailableCourses;\n            const limit = this.props.limit;\n            const courseIsInBoundsOfPage = i >= ((page - 1) * limit) && i < (page * limit);\n\n            if (courseIsInBoundsOfPage) {\n                return (\n                    <BankCourse\n                        name={course.name}\n                        removable={false}\n                        id={course.id}\n                        key={i}\n                        callbackOnDeleteCourse={this.props.callbackOnDeleteCourse}\n                    />\n                )\n            }\n        });\n\n        if (!availableCourses.length) {\n            availableCourses = \"There are no available courses\";\n        }\n        return availableCourses;\n    };\n\n    render() {\n\n        return (\n            <div>\n                <CustomAlert message={this.props.dataAlert.data.message}\n                             isVisible={this.props.dataAlert.isVisibleAlert}\n                             callbackParent={this.props.callbackOnChildChangedClose}\n                             styleAlert={this.props.dataAlert.styleAlert}\n                             titleAlert={this.props.dataAlert.titleAlert}\n                             callbackSetAlertInvisible={this.props.callbackSetAlertInvisible}\n                />\n                <Well bsSize=\"small\">\n                    <h5>Select course to become in bank</h5>\n                    <CourseAutosuggest\n                        courses={this.props.availableCourses}\n                        alertTitle={\"Are you sure you want to add this course to the bank?\"}\n                        alertText={\"* The course and tasks from this course will be public and every user could copy\"}\n                        callbackOnClick={this.props.callbackAddCourse}\n                        messageButton={\"Add course to bank\"}\n                        mdInput={4}\n                        mdButton={2}\n                    />\n                </Well>\n\n                <Row>\n                    <Col md={6}>\n                        <div>\n                            The following courses are marked as task sources:\n                            <br/>\n                            <small> (You are free to copy the tasks from these courses)</small>\n                        </div>\n\n                        <div className=\"list-group\">{this.getListOfCourses()}</div>\n\n                        <UltimatePagination\n                            currentPage={this.props.page}\n                            totalPages={this.props.totalPages}\n                            onChange={this.props.callbackOnPageChange}\n                        />\n                    </Col>\n                    <Col md={6}>\n                        <div>\n                            The following courses are not marked as bank and you are admin:\n                            <br/>\n                            <small> (You can copy tasks from these courses to other courses which you are admin)</small>\n                        </div>\n\n                        <div className=\"list-group\">{this.getListOfAvailableCourses()}</div>\n\n                        <UltimatePagination\n                            currentPage={this.props.pageAvailableCourses}\n                            totalPages={this.props.totalAvailableCoursePages}\n                            onChange={this.props.callbackOnPageAvailableCourseChange}\n                        />\n                    </Col>\n                </Row>\n            </div>\n\n        );\n    }\n}\n\nexport default BankCourseList;"]},"metadata":{},"sourceType":"module"}