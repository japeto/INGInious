{"ast":null,"code":"\"use strict\";\n\nvar ultimate_pagination_utils_1 = require(\"./ultimate-pagination-utils\");\n\nvar ultimate_pagination_item_factories_1 = require(\"./ultimate-pagination-item-factories\");\n\nfunction getPaginationModel(options) {\n  if (options == null) {\n    throw new Error('getPaginationModel(): options object should be a passed');\n  }\n\n  var totalPages = Number(options.totalPages);\n\n  if (isNaN(totalPages)) {\n    throw new Error('getPaginationModel(): totalPages should be a number');\n  }\n\n  if (totalPages < 0) {\n    throw new Error('getPaginationModel(): totalPages shouldn\\'t be a negative number');\n  }\n\n  var currentPage = Number(options.currentPage);\n\n  if (isNaN(currentPage)) {\n    throw new Error('getPaginationModel(): currentPage should be a number');\n  }\n\n  if (currentPage < 0) {\n    throw new Error('getPaginationModel(): currentPage shouldn\\'t be a negative number');\n  }\n\n  if (currentPage > totalPages) {\n    throw new Error('getPaginationModel(): currentPage shouldn\\'t be greater than totalPages');\n  }\n\n  var boundaryPagesRange = options.boundaryPagesRange == null ? 1 : Number(options.boundaryPagesRange);\n\n  if (isNaN(boundaryPagesRange)) {\n    throw new Error('getPaginationModel(): boundaryPagesRange should be a number');\n  }\n\n  if (boundaryPagesRange < 0) {\n    throw new Error('getPaginationModel(): boundaryPagesRange shouldn\\'t be a negative number');\n  }\n\n  var siblingPagesRange = options.siblingPagesRange == null ? 1 : Number(options.siblingPagesRange);\n\n  if (isNaN(siblingPagesRange)) {\n    throw new Error('getPaginationModel(): siblingPagesRange should be a number');\n  }\n\n  if (siblingPagesRange < 0) {\n    throw new Error('getPaginationModel(): siblingPagesRange shouldn\\'t be a negative number');\n  }\n\n  var hidePreviousAndNextPageLinks = Boolean(options.hidePreviousAndNextPageLinks);\n  var hideFirstAndLastPageLinks = Boolean(options.hideFirstAndLastPageLinks);\n  var hideEllipsis = Boolean(options.hideEllipsis);\n  var ellipsisSize = hideEllipsis ? 0 : 1;\n  var paginationModel = [];\n  var createPage = ultimate_pagination_item_factories_1.createPageFunctionFactory(options);\n\n  if (!hideFirstAndLastPageLinks) {\n    paginationModel.push(ultimate_pagination_item_factories_1.createFirstPageLink(options));\n  }\n\n  if (!hidePreviousAndNextPageLinks) {\n    paginationModel.push(ultimate_pagination_item_factories_1.createPreviousPageLink(options));\n  } // Simplify generation of pages if number of available items is equal or greater than total pages to show\n\n\n  if (1 + 2 * ellipsisSize + 2 * siblingPagesRange + 2 * boundaryPagesRange >= totalPages) {\n    var allPages = ultimate_pagination_utils_1.createRange(1, totalPages).map(createPage);\n    paginationModel.push.apply(paginationModel, allPages);\n  } else {\n    // Calculate group of first pages\n    var firstPagesStart = 1;\n    var firstPagesEnd = boundaryPagesRange;\n    var firstPages = ultimate_pagination_utils_1.createRange(firstPagesStart, firstPagesEnd).map(createPage); // Calculate group of last pages\n\n    var lastPagesStart = totalPages + 1 - boundaryPagesRange;\n    var lastPagesEnd = totalPages;\n    var lastPages = ultimate_pagination_utils_1.createRange(lastPagesStart, lastPagesEnd).map(createPage); // Calculate group of main pages\n\n    var mainPagesStart = Math.min(Math.max(currentPage - siblingPagesRange, firstPagesEnd + ellipsisSize + 1), lastPagesStart - ellipsisSize - 2 * siblingPagesRange - 1);\n    var mainPagesEnd = mainPagesStart + 2 * siblingPagesRange;\n    var mainPages = ultimate_pagination_utils_1.createRange(mainPagesStart, mainPagesEnd).map(createPage); // Add group of first pages\n\n    paginationModel.push.apply(paginationModel, firstPages);\n\n    if (!hideEllipsis) {\n      // Calculate and add ellipsis before group of main pages\n      var firstEllipsisPageNumber = mainPagesStart - 1;\n      var showPageInsteadOfFirstEllipsis = firstEllipsisPageNumber === firstPagesEnd + 1;\n      var createFirstEllipsisOrPage = showPageInsteadOfFirstEllipsis ? createPage : ultimate_pagination_item_factories_1.createFirstEllipsis;\n      var firstEllipsis = createFirstEllipsisOrPage(firstEllipsisPageNumber);\n      paginationModel.push(firstEllipsis);\n    } // Add group of main pages\n\n\n    paginationModel.push.apply(paginationModel, mainPages);\n\n    if (!hideEllipsis) {\n      // Calculate and add ellipsis after group of main pages\n      var secondEllipsisPageNumber = mainPagesEnd + 1;\n      var showPageInsteadOfSecondEllipsis = secondEllipsisPageNumber === lastPagesStart - 1;\n      var createSecondEllipsisOrPage = showPageInsteadOfSecondEllipsis ? createPage : ultimate_pagination_item_factories_1.createSecondEllipsis;\n      var secondEllipsis = createSecondEllipsisOrPage(secondEllipsisPageNumber);\n      paginationModel.push(secondEllipsis);\n    } // Add group of last pages\n\n\n    paginationModel.push.apply(paginationModel, lastPages);\n  }\n\n  if (!hidePreviousAndNextPageLinks) {\n    paginationModel.push(ultimate_pagination_item_factories_1.createNextPageLink(options));\n  }\n\n  if (!hideFirstAndLastPageLinks) {\n    paginationModel.push(ultimate_pagination_item_factories_1.createLastPageLink(options));\n  }\n\n  return paginationModel;\n}\n\nexports.getPaginationModel = getPaginationModel;\n\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\n\nexports.ITEM_TYPES = ultimate_pagination_constants_1.ITEM_TYPES;\nexports.ITEM_KEYS = ultimate_pagination_constants_1.ITEM_KEYS;","map":{"version":3,"sources":["../src/ultimate-pagination.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar ultimate_pagination_utils_1 = require(\"./ultimate-pagination-utils\");\nvar ultimate_pagination_item_factories_1 = require(\"./ultimate-pagination-item-factories\");\nfunction getPaginationModel(options) {\n    if (options == null) {\n        throw new Error('getPaginationModel(): options object should be a passed');\n    }\n    var totalPages = Number(options.totalPages);\n    if (isNaN(totalPages)) {\n        throw new Error('getPaginationModel(): totalPages should be a number');\n    }\n    if (totalPages < 0) {\n        throw new Error('getPaginationModel(): totalPages shouldn\\'t be a negative number');\n    }\n    var currentPage = Number(options.currentPage);\n    if (isNaN(currentPage)) {\n        throw new Error('getPaginationModel(): currentPage should be a number');\n    }\n    if (currentPage < 0) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be a negative number');\n    }\n    if (currentPage > totalPages) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be greater than totalPages');\n    }\n    var boundaryPagesRange = (options.boundaryPagesRange == null ? 1 : Number(options.boundaryPagesRange));\n    if (isNaN(boundaryPagesRange)) {\n        throw new Error('getPaginationModel(): boundaryPagesRange should be a number');\n    }\n    if (boundaryPagesRange < 0) {\n        throw new Error('getPaginationModel(): boundaryPagesRange shouldn\\'t be a negative number');\n    }\n    var siblingPagesRange = (options.siblingPagesRange == null ? 1 : Number(options.siblingPagesRange));\n    if (isNaN(siblingPagesRange)) {\n        throw new Error('getPaginationModel(): siblingPagesRange should be a number');\n    }\n    if (siblingPagesRange < 0) {\n        throw new Error('getPaginationModel(): siblingPagesRange shouldn\\'t be a negative number');\n    }\n    var hidePreviousAndNextPageLinks = Boolean(options.hidePreviousAndNextPageLinks);\n    var hideFirstAndLastPageLinks = Boolean(options.hideFirstAndLastPageLinks);\n    var hideEllipsis = Boolean(options.hideEllipsis);\n    var ellipsisSize = (hideEllipsis ? 0 : 1);\n    var paginationModel = [];\n    var createPage = ultimate_pagination_item_factories_1.createPageFunctionFactory(options);\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createFirstPageLink(options));\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createPreviousPageLink(options));\n    }\n    // Simplify generation of pages if number of available items is equal or greater than total pages to show\n    if (1 + 2 * ellipsisSize + 2 * siblingPagesRange + 2 * boundaryPagesRange >= totalPages) {\n        var allPages = ultimate_pagination_utils_1.createRange(1, totalPages).map(createPage);\n        paginationModel.push.apply(paginationModel, allPages);\n    }\n    else {\n        // Calculate group of first pages\n        var firstPagesStart = 1;\n        var firstPagesEnd = boundaryPagesRange;\n        var firstPages = ultimate_pagination_utils_1.createRange(firstPagesStart, firstPagesEnd).map(createPage);\n        // Calculate group of last pages\n        var lastPagesStart = totalPages + 1 - boundaryPagesRange;\n        var lastPagesEnd = totalPages;\n        var lastPages = ultimate_pagination_utils_1.createRange(lastPagesStart, lastPagesEnd).map(createPage);\n        // Calculate group of main pages\n        var mainPagesStart = Math.min(Math.max(currentPage - siblingPagesRange, firstPagesEnd + ellipsisSize + 1), lastPagesStart - ellipsisSize - 2 * siblingPagesRange - 1);\n        var mainPagesEnd = mainPagesStart + 2 * siblingPagesRange;\n        var mainPages = ultimate_pagination_utils_1.createRange(mainPagesStart, mainPagesEnd).map(createPage);\n        // Add group of first pages\n        paginationModel.push.apply(paginationModel, firstPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis before group of main pages\n            var firstEllipsisPageNumber = mainPagesStart - 1;\n            var showPageInsteadOfFirstEllipsis = (firstEllipsisPageNumber === firstPagesEnd + 1);\n            var createFirstEllipsisOrPage = showPageInsteadOfFirstEllipsis ? createPage : ultimate_pagination_item_factories_1.createFirstEllipsis;\n            var firstEllipsis = createFirstEllipsisOrPage(firstEllipsisPageNumber);\n            paginationModel.push(firstEllipsis);\n        }\n        // Add group of main pages\n        paginationModel.push.apply(paginationModel, mainPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis after group of main pages\n            var secondEllipsisPageNumber = mainPagesEnd + 1;\n            var showPageInsteadOfSecondEllipsis = (secondEllipsisPageNumber === lastPagesStart - 1);\n            var createSecondEllipsisOrPage = showPageInsteadOfSecondEllipsis ? createPage : ultimate_pagination_item_factories_1.createSecondEllipsis;\n            var secondEllipsis = createSecondEllipsisOrPage(secondEllipsisPageNumber);\n            paginationModel.push(secondEllipsis);\n        }\n        // Add group of last pages\n        paginationModel.push.apply(paginationModel, lastPages);\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createNextPageLink(options));\n    }\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createLastPageLink(options));\n    }\n    return paginationModel;\n}\nexports.getPaginationModel = getPaginationModel;\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.ITEM_TYPES = ultimate_pagination_constants_1.ITEM_TYPES;\nexports.ITEM_KEYS = ultimate_pagination_constants_1.ITEM_KEYS;\n//# sourceMappingURL=ultimate-pagination.js.map"]},"metadata":{},"sourceType":"script"}