{"ast":null,"code":"import _classCallCheck from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Tabs,Tab}from'react-bootstrap';import BankCourseList from'./bank_course_list';import TaskList from'./task_list';/*global $:false*/var BankPage=/*#__PURE__*/function(_React$Component){_inherits(BankPage,_React$Component);var _super=_createSuper(BankPage);function BankPage(props){var _this;_classCallCheck(this,BankPage);_this=_super.call(this,props);_this.state={tasks:[],courses:[],availableCourses:[],availableCoursesToCopy:[],pageTasks:1,pageCourses:1,pageAvailableCourses:1,totalPagesTasks:1,totalPagesCourses:1,totalPagesAvailableCourses:1,dataAlertCourseList:{data:{\"message\":\"\"},isVisibleAlert:false,titleAlert:'',styleAlert:''},dataAlertTaskList:{data:{\"message\":\"\"},isVisibleAlert:false,titleAlert:'',styleAlert:''}};_this.tasksQuery=\"\";_this.limit=10;_this.onPageCourseChange=_this.onPageCourseChange.bind(_assertThisInitialized(_this));_this.addTaskToCourse=_this.addTaskToCourse.bind(_assertThisInitialized(_this));_this.updateBankCoursesAsync=_this.updateBankCoursesAsync.bind(_assertThisInitialized(_this));_this.updateTasksAsync=_this.updateTasksAsync.bind(_assertThisInitialized(_this));_this.updateAvailableCoursesAsync=_this.updateAvailableCoursesAsync.bind(_assertThisInitialized(_this));_this.updateAvailableCoursesToCopyAsync=_this.updateAvailableCoursesToCopyAsync.bind(_assertThisInitialized(_this));_this.deleteCourse=_this.deleteCourse.bind(_assertThisInitialized(_this));_this.updateFilteredTasksAsync=_this.updateFilteredTasksAsync.bind(_assertThisInitialized(_this));_this.addCourse=_this.addCourse.bind(_assertThisInitialized(_this));_this.onAlertTaskListClose=_this.onAlertTaskListClose.bind(_assertThisInitialized(_this));_this.onAlertCourseListClose=_this.onAlertCourseListClose.bind(_assertThisInitialized(_this));_this.setAlertCourseListInvisible=_this.setAlertCourseListInvisible.bind(_assertThisInitialized(_this));_this.setAlertTaskListInvisible=_this.setAlertTaskListInvisible.bind(_assertThisInitialized(_this));_this.onPageAvailableCourseChange=_this.onPageAvailableCourseChange.bind(_assertThisInitialized(_this));return _this;}_createClass(BankPage,[{key:\"updateBankCoursesAsync\",value:function updateBankCoursesAsync(){var _this2=this;$.getJSON(\"/plugins/problems_bank/api/bank_courses\").then(function(courses){var newCourses=courses;var totalPages=Math.ceil(newCourses.length/_this2.limit);if(totalPages===0){totalPages=1;}_this2.setState({totalPagesCourses:totalPages,pageCourses:1,courses:newCourses});});}},{key:\"updateTasksAsync\",value:function updateTasksAsync(){var _this3=this;var page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var url=\"/plugins/problems_bank/api/bank_tasks?limit=\".concat(this.limit,\"&page=\").concat(page);$.getJSON(url).then(function(response){var newTotalPages=response['total_pages'];_this3.setState({totalPagesTasks:newTotalPages,pageTasks:page,tasks:response['tasks']});});}},{key:\"updateAvailableCoursesAsync\",value:function updateAvailableCoursesAsync(){var _this4=this;$.getJSON(\"/plugins/problems_bank/api/available_courses\").then(function(availableCourses){var newCourses=availableCourses;var newTotalPages=Math.ceil(newCourses.length/_this4.limit);if(newTotalPages===0){newTotalPages=1;}_this4.setState({totalPagesAvailableCourses:newTotalPages,pageAvailableCourses:1,availableCourses:availableCourses});});}},{key:\"updateAvailableCoursesToCopyAsync\",value:function updateAvailableCoursesToCopyAsync(){var _this5=this;$.getJSON(\"/plugins/problems_bank/api/available_courses_to_copy\").then(function(availableCoursesToCopy){_this5.setState({availableCoursesToCopy:availableCoursesToCopy});});}},{key:\"deleteCourse\",value:function deleteCourse(course_id){var _this6=this;$.ajax({url:'/plugins/problems_bank/api/bank_courses?'+$.param({\"course_id\":course_id}),type:\"DELETE\",success:function success(data){_this6.updateBankCoursesAsync();_this6.updateAvailableCoursesAsync();_this6.tasksQuery===\"\"?_this6.updateTasksAsync():_this6.updateFilteredTasksAsync(_this6.tasksQuery);}}).done(function(data){_this6.setState({dataAlertCourseList:{data:data,isVisibleAlert:true,titleAlert:\"Success!\",styleAlert:\"success\"}});}).error(function(data){_this6.setState({dataAlertCourseList:{isVisibleAlert:true,data:{\"message\":data[\"responseJSON\"][\"error\"]},titleAlert:\"Error!\",styleAlert:\"danger\"}});});}},{key:\"updateFilteredTasksAsync\",value:function updateFilteredTasksAsync(query){var _this7=this;var page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var data={\"task_query\":query,\"limit\":this.limit,\"page\":page};this.tasksQuery=query;$.post(\"/plugins/problems_bank/api/filter_bank_tasks\",data,function(response){var totalPages=response['total_pages'];var filteredTasks=response['tasks'];_this7.setState({tasks:filteredTasks,pageTasks:page,totalPagesTasks:totalPages});});}},{key:\"addCourse\",value:function addCourse(courseId){var _this8=this;$.post(\"/plugins/problems_bank/api/bank_courses\",{\"course_id\":courseId},function(data){_this8.updateBankCoursesAsync();_this8.updateAvailableCoursesAsync();_this8.tasksQuery===\"\"?_this8.updateTasksAsync():_this8.updateFilteredTasksAsync(_this8.tasksQuery);}).done(function(data){_this8.setState({dataAlertCourseList:{data:data,isVisibleAlert:true,titleAlert:\"Success!\",styleAlert:\"success\"}});}).error(function(data){_this8.setState({dataAlertCourseList:{isVisibleAlert:true,data:{\"message\":data[\"responseJSON\"][\"error\"]},titleAlert:\"Error!\",styleAlert:\"danger\"}});});}},{key:\"onAlertTaskListClose\",value:function onAlertTaskListClose(isVisible){this.setState({dataAlertTaskList:{isVisibleAlert:isVisible,data:{\"message\":\"\"},titleAlert:'',styleAlert:''}});}},{key:\"onAlertCourseListClose\",value:function onAlertCourseListClose(isVisible){this.setState({dataAlertCourseList:{isVisibleAlert:isVisible,data:{\"message\":\"\"},titleAlert:'',styleAlert:''}});}},{key:\"addTaskToCourse\",value:function addTaskToCourse(targetId,taskId,bankId,query){var _this9=this;var request_data={\"target_id\":targetId,\"task_id\":taskId,\"bank_id\":bankId};$.post(\"/plugins/problems_bank/api/copy_task\",request_data,function(data){if(query===\"\")_this9.updateTasksAsync();else _this9.updateFilteredTasksAsync(query);}).done(function(data){_this9.setState({dataAlertTaskList:{data:data,isVisibleAlert:true,titleAlert:\"Success!\",styleAlert:\"success\"}});}).error(function(data){_this9.setState({dataAlertTaskList:{isVisibleAlert:true,data:{\"message\":data[\"responseJSON\"][\"error\"]},titleAlert:\"Error!\",styleAlert:\"danger\"}});});}},{key:\"setAlertCourseListInvisible\",value:function setAlertCourseListInvisible(){this.setState({dataAlertCourseList:{data:{\"message\":\"\"},isVisibleAlert:false,titleAlert:'',styleAlert:''}});}},{key:\"setAlertTaskListInvisible\",value:function setAlertTaskListInvisible(){this.setState({dataAlertTaskList:{data:{\"message\":\"\"},isVisibleAlert:false,titleAlert:'',styleAlert:''}});}},{key:\"onPageCourseChange\",value:function onPageCourseChange(page){this.setState({pageCourses:page});}},{key:\"onPageAvailableCourseChange\",value:function onPageAvailableCourseChange(page){this.setState({pageAvailableCourses:page});}},{key:\"componentWillMount\",value:function componentWillMount(){this.updateBankCoursesAsync();this.updateAvailableCoursesAsync();this.updateAvailableCoursesToCopyAsync();this.updateTasksAsync();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Tabs,{defaultActiveKey:1,id:\"bank-page-tabs\"},/*#__PURE__*/React.createElement(Tab,{eventKey:1,title:\"Courses\"},/*#__PURE__*/React.createElement(BankCourseList,{limit:this.limit,courses:this.state.courses,availableCourses:this.state.availableCourses,page:this.state.pageCourses,totalPages:this.state.totalPagesCourses,pageAvailableCourses:this.state.pageAvailableCourses,totalAvailableCoursePages:this.state.totalPagesAvailableCourses,dataAlert:this.state.dataAlertCourseList,callbackOnChildChangedClose:this.onAlertCourseListClose,callbackUpdateTask:this.updateTasksAsync,callbackUpdateBank:this.updateBankCoursesAsync,callbackUpdateAvailable:this.updateAvailableCoursesAsync,callbackOnPageChange:this.onPageCourseChange,callbackOnPageAvailableCourseChange:this.onPageAvailableCourseChange,callbackOnDeleteCourse:this.deleteCourse,callbackAddCourse:this.addCourse,callbackSetAlertInvisible:this.setAlertCourseListInvisible})),/*#__PURE__*/React.createElement(Tab,{eventKey:2,title:\"Tasks\"},/*#__PURE__*/React.createElement(TaskList,{tasks:this.state.tasks,limit:this.limit,page:this.state.pageTasks,totalPages:this.state.totalPagesTasks,courses:this.state.availableCoursesToCopy,dataAlert:this.state.dataAlertTaskList,callbackOnChildChangedClose:this.onAlertTaskListClose,callbackUpdateTasks:this.updateTasksAsync,callbackUpdateFilteredTasks:this.updateFilteredTasksAsync,callBackAddTaskToCourse:this.addTaskToCourse,callbackSetAlertInvisible:this.setAlertTaskListInvisible})));}}]);return BankPage;}(React.Component);export default BankPage;","map":{"version":3,"sources":["/usr/lib/python3.5/site-packages/inginious/frontend/plugins/problem_bank/react_app/src/bank_page.jsx"],"names":["React","Tabs","Tab","BankCourseList","TaskList","BankPage","props","state","tasks","courses","availableCourses","availableCoursesToCopy","pageTasks","pageCourses","pageAvailableCourses","totalPagesTasks","totalPagesCourses","totalPagesAvailableCourses","dataAlertCourseList","data","isVisibleAlert","titleAlert","styleAlert","dataAlertTaskList","tasksQuery","limit","onPageCourseChange","bind","addTaskToCourse","updateBankCoursesAsync","updateTasksAsync","updateAvailableCoursesAsync","updateAvailableCoursesToCopyAsync","deleteCourse","updateFilteredTasksAsync","addCourse","onAlertTaskListClose","onAlertCourseListClose","setAlertCourseListInvisible","setAlertTaskListInvisible","onPageAvailableCourseChange","$","getJSON","then","newCourses","totalPages","Math","ceil","length","setState","page","url","response","newTotalPages","course_id","ajax","param","type","success","done","error","query","post","filteredTasks","courseId","isVisible","targetId","taskId","bankId","request_data","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport BankCourseList from './bank_course_list';\nimport TaskList from './task_list';\n\n/*global $:false*/\n\nclass BankPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tasks: [],\n            courses: [],\n            availableCourses: [],\n            availableCoursesToCopy: [],\n            pageTasks: 1,\n            pageCourses: 1,\n            pageAvailableCourses: 1,\n            totalPagesTasks: 1,\n            totalPagesCourses: 1,\n            totalPagesAvailableCourses: 1,\n            dataAlertCourseList: {\n                data: {\"message\": \"\"},\n                isVisibleAlert: false,\n                titleAlert: '',\n                styleAlert: ''\n            },\n            dataAlertTaskList: {\n                data: {\"message\": \"\"},\n                isVisibleAlert: false,\n                titleAlert: '',\n                styleAlert: ''\n            }\n        };\n        this.tasksQuery = \"\";\n        this.limit = 10;\n\n        this.onPageCourseChange = this.onPageCourseChange.bind(this);\n        this.addTaskToCourse = this.addTaskToCourse.bind(this);\n\n        this.updateBankCoursesAsync = this.updateBankCoursesAsync.bind(this);\n        this.updateTasksAsync = this.updateTasksAsync.bind(this);\n        this.updateAvailableCoursesAsync = this.updateAvailableCoursesAsync.bind(this);\n        this.updateAvailableCoursesToCopyAsync = this.updateAvailableCoursesToCopyAsync.bind(this);\n\n        this.deleteCourse = this.deleteCourse.bind(this);\n        this.updateFilteredTasksAsync = this.updateFilteredTasksAsync.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n\n        this.onAlertTaskListClose = this.onAlertTaskListClose.bind(this);\n        this.onAlertCourseListClose = this.onAlertCourseListClose.bind(this);\n        this.setAlertCourseListInvisible = this.setAlertCourseListInvisible.bind(this);\n        this.setAlertTaskListInvisible = this.setAlertTaskListInvisible.bind(this);\n\n        this.onPageAvailableCourseChange = this.onPageAvailableCourseChange.bind(this);\n    }\n\n    updateBankCoursesAsync() {\n        $.getJSON(\"/plugins/problems_bank/api/bank_courses\").then((courses) => {\n            const newCourses = courses;\n            let totalPages = Math.ceil(newCourses.length / this.limit);\n            if (totalPages === 0) {\n                totalPages = 1;\n            }\n            this.setState({\n                totalPagesCourses: totalPages,\n                pageCourses: 1,\n                courses: newCourses\n            })\n        });\n    }\n\n    updateTasksAsync(page = 1) {\n        const url = `/plugins/problems_bank/api/bank_tasks?limit=${this.limit}&page=${page}`;\n        $.getJSON(url).then((response) => {\n            const newTotalPages = response['total_pages'];\n            this.setState({\n                totalPagesTasks: newTotalPages,\n                pageTasks: page,\n                tasks: response['tasks'],\n            });\n        });\n    }\n\n    updateAvailableCoursesAsync() {\n        $.getJSON(\"/plugins/problems_bank/api/available_courses\").then((availableCourses) => {\n            const newCourses = availableCourses;\n            let newTotalPages = Math.ceil(newCourses.length / this.limit);\n            if (newTotalPages === 0) {\n                newTotalPages = 1;\n            }\n            this.setState({\n                totalPagesAvailableCourses: newTotalPages,\n                pageAvailableCourses: 1,\n                availableCourses: availableCourses\n            });\n        });\n    }\n\n    updateAvailableCoursesToCopyAsync() {\n        $.getJSON(\"/plugins/problems_bank/api/available_courses_to_copy\").then((availableCoursesToCopy) => {\n            this.setState({\n                availableCoursesToCopy: availableCoursesToCopy\n            });\n        });\n    }\n\n    deleteCourse(course_id) {\n        $.ajax({\n            url: '/plugins/problems_bank/api/bank_courses?' + $.param({\"course_id\": course_id}),\n            type: \"DELETE\",\n            success: (data) => {\n                this.updateBankCoursesAsync();\n                this.updateAvailableCoursesAsync();\n                this.tasksQuery === \"\" ? this.updateTasksAsync() : this.updateFilteredTasksAsync(this.tasksQuery);\n            }\n        }).done((data) => {\n            this.setState({\n                dataAlertCourseList: {\n                    data: data,\n                    isVisibleAlert: true,\n                    titleAlert: \"Success!\",\n                    styleAlert: \"success\"\n                }\n            });\n        }).error((data) => {\n            this.setState({\n                dataAlertCourseList: {\n                    isVisibleAlert: true,\n                    data: {\"message\": data[\"responseJSON\"][\"error\"]},\n                    titleAlert: \"Error!\",\n                    styleAlert: \"danger\"\n                }\n            });\n        });\n    };\n\n    updateFilteredTasksAsync(query, page = 1) {\n        const data = {\n            \"task_query\": query,\n            \"limit\": this.limit,\n            \"page\": page\n        };\n        this.tasksQuery = query;\n        $.post(\"/plugins/problems_bank/api/filter_bank_tasks\", data, (response) => {\n            const totalPages = response['total_pages'];\n            const filteredTasks = response['tasks'];\n\n            this.setState({\n                tasks: filteredTasks,\n                pageTasks: page,\n                totalPagesTasks: totalPages\n            });\n        });\n    }\n\n    addCourse(courseId) {\n\n        $.post(\"/plugins/problems_bank/api/bank_courses\", {\"course_id\": courseId}, (data) => {\n            this.updateBankCoursesAsync();\n            this.updateAvailableCoursesAsync();\n            this.tasksQuery === \"\" ? this.updateTasksAsync() : this.updateFilteredTasksAsync(this.tasksQuery);\n        }).done((data) => {\n            this.setState({\n                dataAlertCourseList: {\n                    data: data,\n                    isVisibleAlert: true,\n                    titleAlert: \"Success!\",\n                    styleAlert: \"success\"\n                }\n            });\n        }).error((data) => {\n            this.setState({\n                dataAlertCourseList: {\n                    isVisibleAlert: true,\n                    data: {\"message\": data[\"responseJSON\"][\"error\"]},\n                    titleAlert: \"Error!\",\n                    styleAlert: \"danger\"\n                }\n            });\n        });\n    }\n\n    onAlertTaskListClose(isVisible) {\n        this.setState({\n            dataAlertTaskList: {\n                isVisibleAlert: isVisible,\n                data: {\"message\": \"\"},\n                titleAlert: '',\n                styleAlert: ''\n            }\n        });\n    }\n\n    onAlertCourseListClose(isVisible) {\n        this.setState({\n            dataAlertCourseList: {\n                isVisibleAlert: isVisible,\n                data: {\"message\": \"\"},\n                titleAlert: '',\n                styleAlert: ''\n            }\n        });\n    }\n\n    addTaskToCourse(targetId, taskId, bankId, query) {\n        const request_data = {\n            \"target_id\": targetId,\n            \"task_id\": taskId,\n            \"bank_id\": bankId\n        };\n        $.post(\"/plugins/problems_bank/api/copy_task\", request_data, (data) => {\n            if (query === \"\") this.updateTasksAsync();\n            else this.updateFilteredTasksAsync(query);\n        }).done((data) => {\n            this.setState({\n                dataAlertTaskList: {\n                    data: data,\n                    isVisibleAlert: true,\n                    titleAlert: \"Success!\",\n                    styleAlert: \"success\"\n                }\n            });\n        }).error((data) => {\n            this.setState({\n                dataAlertTaskList: {\n                    isVisibleAlert: true,\n                    data: {\"message\": data[\"responseJSON\"][\"error\"]},\n                    titleAlert: \"Error!\",\n                    styleAlert: \"danger\"\n                }\n            });\n        });\n    };\n\n    setAlertCourseListInvisible() {\n        this.setState({\n            dataAlertCourseList: {\n                data: {\"message\": \"\"},\n                isVisibleAlert: false,\n                titleAlert: '',\n                styleAlert: ''\n            }\n        });\n    }\n\n    setAlertTaskListInvisible() {\n        this.setState({\n            dataAlertTaskList: {\n                data: {\"message\": \"\"},\n                isVisibleAlert: false,\n                titleAlert: '',\n                styleAlert: ''\n            }\n        });\n    }\n\n    onPageCourseChange(page) {\n        this.setState({pageCourses: page});\n    }\n\n    onPageAvailableCourseChange(page) {\n        this.setState({pageAvailableCourses: page});\n    }\n\n    componentWillMount() {\n        this.updateBankCoursesAsync();\n        this.updateAvailableCoursesAsync();\n        this.updateAvailableCoursesToCopyAsync();\n        this.updateTasksAsync();\n    }\n\n    render() {\n        return (\n            <Tabs defaultActiveKey={1} id=\"bank-page-tabs\">\n                <Tab eventKey={1} title=\"Courses\">\n                    <BankCourseList\n                        limit={this.limit}\n                        courses={this.state.courses}\n                        availableCourses={this.state.availableCourses}\n                        page={this.state.pageCourses}\n                        totalPages={this.state.totalPagesCourses}\n                        pageAvailableCourses={this.state.pageAvailableCourses}\n                        totalAvailableCoursePages={this.state.totalPagesAvailableCourses}\n                        dataAlert={this.state.dataAlertCourseList}\n                        callbackOnChildChangedClose={this.onAlertCourseListClose}\n                        callbackUpdateTask={this.updateTasksAsync}\n                        callbackUpdateBank={this.updateBankCoursesAsync}\n                        callbackUpdateAvailable={this.updateAvailableCoursesAsync}\n                        callbackOnPageChange={this.onPageCourseChange}\n                        callbackOnPageAvailableCourseChange={this.onPageAvailableCourseChange}\n                        callbackOnDeleteCourse={this.deleteCourse}\n                        callbackAddCourse={this.addCourse}\n                        callbackSetAlertInvisible={this.setAlertCourseListInvisible}\n                    />\n                </Tab>\n                <Tab eventKey={2} title=\"Tasks\">\n                    <TaskList\n                        tasks={this.state.tasks}\n                        limit={this.limit}\n                        page={this.state.pageTasks}\n                        totalPages={this.state.totalPagesTasks}\n                        courses={this.state.availableCoursesToCopy}\n                        dataAlert={this.state.dataAlertTaskList}\n                        callbackOnChildChangedClose={this.onAlertTaskListClose}\n                        callbackUpdateTasks={this.updateTasksAsync}\n                        callbackUpdateFilteredTasks={this.updateFilteredTasksAsync}\n                        callBackAddTaskToCourse={this.addTaskToCourse}\n                        callbackSetAlertInvisible={this.setAlertTaskListInvisible}\n                    />\n                </Tab>\n            </Tabs>\n        );\n    }\n}\n\nexport default BankPage;"]},"metadata":{},"sourceType":"module"}